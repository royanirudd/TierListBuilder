doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Tier List Builder
    style.
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #f0f0f0;
      }
      .tier-list {
        display: flex;
        flex-direction: column;
        gap: 10px;
      }
      .tier {
        display: flex;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
      }
      .tier-label {
        width: 30px;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        background-color: #eee;
      }
      .tier-items {
        flex-grow: 1;
        min-height: 60px;
        padding: 10px;
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
      }
      .buttons {
        margin-top: 20px;
        display: flex;
        gap: 10px;
      }
      button {
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border: none;
        border-radius: 5px;
        background-color: #4CAF50;
        color: white;
      }
      button:hover {
        background-color: #45a049;
      }
      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.4);
      }
      .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
      }
      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }
      .close:hover,
      .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
      }
      #imageOptions {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 10px;
      }
      #imageOptions img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        cursor: pointer;
      }
      .tier-item {
        width: 50px;
        height: 50px;
        background-size: cover;
        background-position: center;
        cursor: move;
      }
      .tier-items.drag-over {
        background-color: #e0e0e0;
      }
  body
    h1 Tier List Builder
    .tier-list
      each tier in ['S', 'A', 'B', 'C', 'D', 'E', 'F']
        .tier
          .tier-label= tier
          .tier-items(id=`tier-${tier}`, ondragover="allowDrop(event)", ondrop="drop(event)")
    .buttons
      button#addItem Add Item
      button#edit Edit
      button#export Export

    #addItemModal.modal
      .modal-content
        span.close &times;
        h2 Add Item
        input#itemName(type="text", placeholder="Item name")
        input#searchQuery(type="text", placeholder="Search query")
        button#searchImages Search Images
        #imageOptions

    script.
      const modal = document.getElementById('addItemModal');
      const addItemBtn = document.getElementById('addItem');
      const closeBtn = document.getElementsByClassName('close')[0];
      const searchImagesBtn = document.getElementById('searchImages');
      const imageOptions = document.getElementById('imageOptions');

      addItemBtn.onclick = () => modal.style.display = "block";
      closeBtn.onclick = () => modal.style.display = "none";
      window.onclick = (event) => {
        if (event.target == modal) modal.style.display = "none";
      }

      searchImagesBtn.onclick = () => {
        const itemName = document.getElementById('itemName').value;
        const searchQuery = document.getElementById('searchQuery').value;
        
        // Simulate image search (replace with actual API call in production)
        const mockImages = [
          'https://via.placeholder.com/100x100?text=1',
          'https://via.placeholder.com/100x100?text=2',
          'https://via.placeholder.com/100x100?text=3',
          'https://via.placeholder.com/100x100?text=4',
          'https://via.placeholder.com/100x100?text=5'
        ];

        imageOptions.innerHTML = '';
        mockImages.forEach(src => {
          const img = document.createElement('img');
          img.src = src;
          img.onclick = () => addItemToTier(itemName, src);
          imageOptions.appendChild(img);
        });
      }

      function addItemToTier(name, imageSrc) {
        const item = document.createElement('div');
        item.className = 'tier-item';
        item.style.backgroundImage = `url(${imageSrc})`;
        item.title = name;
        item.draggable = true;
        item.ondragstart = drag;

        // Add to the S tier by default (you can modify this as needed)
        document.getElementById('tier-S').appendChild(item);
        modal.style.display = "none";
      }

      function allowDrop(ev) {
        ev.preventDefault();
        ev.target.closest('.tier-items').classList.add('drag-over');
      }

      function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
      }

      function drop(ev) {
        ev.preventDefault();
        const data = ev.dataTransfer.getData("text");
        const draggedElement = document.getElementById(data);
        if (draggedElement) {
          ev.target.closest('.tier-items').appendChild(draggedElement);
        } else {
          ev.target.closest('.tier-items').appendChild(ev.target);
        }
        ev.target.closest('.tier-items').classList.remove('drag-over');
      }

      document.querySelectorAll('.tier-items').forEach(tierItems => {
        tierItems.ondragleave = (ev) => {
          ev.preventDefault();
          ev.target.closest('.tier-items').classList.remove('drag-over');
        };
      });

      document.getElementById('edit').addEventListener('click', () => {
        console.log('Edit clicked');
        // Implement edit functionality later
      });

      document.getElementById('export').addEventListener('click', () => {
        console.log('Export clicked');
        // Implement export functionality later
      });
